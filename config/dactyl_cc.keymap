#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

//  ##########################################################
//  ###########        WORKING 2023/07/1       ###############
//  ##########################################################
// #############         LAYERS         #################

#define SYM_L   1
#define NAV_L   2
#define NAV2_L  3

//#define OTHER_L 4

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define SYMBOL  3

// Desktop and tab navigation shortcuts		

#define DESKTOP_LT   LC(LG(LEFT))
#define DESKTOP_RT   LC(LG(RIGHT))
#define WINDOW_LT    LA(LS(TAB))
#define WINDOW_RT    LA(TAB)
#define TAB_LT       LC(LS(TAB))
#define TAB_RT       LC(TAB)

// NOT USED  &kp LG(LC(LEFT))  &kp LG(LC(RIGHT))
// Generic bindings

#define KILL_WINDOW  LA(F4)
#define MAXIMIZE     LG(UP)
#define MINIMIZE     LG(DOWN)
#define UN_MINIMIZE  LG(LC(N))

&mt {
    flavor = "hold-preferred";
    tapping-term-ms = <500>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <150>;
};

&sl { release-after-ms = <2000>; };

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    macros {
        ZMK_MACRO(inv_qm,

        wait-ms = <10>;
        tap-ms = <10>;
        bindings =
            <&macro_press &kp LALT>,
            <&macro_tap &kp KP_N1 &kp KP_N6 &kp KP_N8>,
            <&macro_release &kp LALT>;

        )
    };

    behaviors {
        //   td_mt_ls: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_LSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt LSHIFT CAPSLOCK>, <&kp LCTRL>;
        //   };
        //   td_mt_rs: tap_dance_mod_tap {
        //       compatible = "zmk,behavior-tap-dance";
        //       label = "TAP_DANCE_RSHIFT";
        //       #binding-cells = <0>;
        //       tapping-term-ms = <200>;
        //       bindings = <&mt RSHIFT CAPSLOCK>, <&kp RCTRL>;
        //   };            
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC           &kp Q  &kp W      &kp E            &kp R  &kp T                  &kp Y      &kp U        &kp I        &kp O      &kp P     &kp LEFT_BRACKET
&kp LEFT_CONTROL  &kp A  &kp S      &kp D            &kp F  &kp G                  &kp H      &kp J        &kp K        &kp L      &kp SEMI  &kp SQT
&kp LSHIFT        &kp Z  &kp X      &kp C            &kp V  &kp B                  &kp N      &kp M        &kp COMMA    &kp DOT    &kp FSLH  &kp RSHIFT
                         &kp GRAVE  &kp EXCLAMATION                                                        &kp MINUS    &kp EQUAL
                                                     &mo 1  &lt 2 SPACE            &lt 3 TAB  &kp LG(TAB)  &lt 4 SPACE  &kp ENTER
                                                            &kp LGUI     &kp LALT  &kp RALT   &mo 6
            >;
        };

        NAVIGATION {
            bindings = <
&kp PRINTSCREEN  &none       &none             &none              &none     &none                 &kp LG(X)           &kp HOME         &kp UP        &kp END        &kp LG(Y)   &kp BACKSPACE
&none            &kp LSHIFT  &kp LCTRL         &kp LALT           &kp LGUI  &kp BACKSPACE         &kp LG(C)           &kp LEFT         &kp DOWN      &kp RIGHT      &kp DELETE  &kp LG(A)
&none            &none       &none             &none              &none     &none                 &kp LG(V)           &kp LG(M)        &kp PAGE_UP   &kp PAGE_DOWN  &kp LG(A)   &kp INSERT
                             &kp LG(LA(LEFT))  &kp LG(LA(RIGHT))                                                                       &mo LOWER     &kp SPACE
                                                                  &trans    &none                 &none               &kp KP_NUMLOCK   &kp CAPSLOCK  &kp ESC
                                                                            &none          &none  &kp LOCKING_SCROLL  &kp PAUSE_BREAK
            >;
        };

        FUNCTION {
            bindings = <
&bootloader  &none       &none      &none     &none     &none          &kp PG_UP             &kp F7                &kp F8           &kp F9      &kp F10  &kp C_VOL_DN
&none        &kp LSHIFT  &kp LCTRL  &kp LALT  &kp LGUI  &none          &kp PG_DN             &kp F4                &kp F5           &kp F6      &kp F11  &kp C_MUTE
&none        &none       &none      &none     &none     &none          &kp INS               &kp F1                &kp F2           &kp F3      &kp F12  &kp ASTRK
                         &none      &none                                                                          &kp COLON        &kp SEMI
                                              &none     &trans         &none                 &kp C_BRIGHTNESS_INC  &kp C_VOLUME_UP  &kp K_MUTE
                                                        &none   &none  &kp C_BRIGHTNESS_DEC  &kp C_VOL_DN
            >;
        };

        NUMBERS {
            bindings = <
&bt BT_NXT  &none   &none   &none   &none   &none            &none   &none   &none   &none   &none   &none
&bt BT_PRV  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5           &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
&kp LBKT    &none   &none   &none   &none   &none            &none   &none   &none   &none   &none   &none
                    &kp N1  &kp N2                                           &kp N3  &kp N4
                                    &kp N1  &kp N2           &kp N3  &kp N4  &kp N5  &kp N6
                                            &kp N7  &kp DEL  &kp N9  &kp N0
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans                                          &trans  &trans
                                &trans  &trans          &trans  &trans  &trans  &trans
                                        &trans  &trans  &trans  &trans
            >;
        };

        SYMBOLS {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans                                          &trans  &trans
                                &trans  &trans          &trans  &trans  &trans  &trans
                                        &trans  &trans  &trans  &trans
            >;
        };

        HOTKEYS {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans                                          &trans  &trans
                                &trans  &trans          &trans  &trans  &trans  &trans
                                        &trans  &trans  &trans  &trans
            >;
        };
    };
};
